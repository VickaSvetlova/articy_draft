//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.ManiacManfred;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.ManiacManfred.Features
{
    
    
    [Serializable()]
    public class DialogChoiceFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueArticyObject mRequiredItem = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyObject mLocationChange = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyScriptInstruction mMoraleChange = new ArticyValueArticyScriptInstruction();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public ArticyObject RequiredItem
        {
            get
            {
                return mRequiredItem.GetValue();
            }
            set
            {
                var oldValue = mRequiredItem;
                mRequiredItem.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DialogChoice.RequiredItem", oldValue.GetValue(), mRequiredItem.GetValue());
            }
        }
        
        public ArticyObject LocationChange
        {
            get
            {
                return mLocationChange.GetValue();
            }
            set
            {
                var oldValue = mLocationChange;
                mLocationChange.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DialogChoice.LocationChange", oldValue.GetValue(), mLocationChange.GetValue());
            }
        }
        
        public ArticyScriptInstruction MoraleChange
        {
            get
            {
                return mMoraleChange.GetValue();
            }
            set
            {
                var oldValue = mMoraleChange;
                mMoraleChange.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "DialogChoice.MoraleChange", oldValue.GetValue(), mMoraleChange.GetValue());
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.ManiacManfred.Features.DialogChoiceFeature newClone = ((Articy.ManiacManfred.Features.DialogChoiceFeature)(aClone));
            if ((mRequiredItem != null))
            {
                newClone.mRequiredItem = ((ArticyValueArticyObject)(mRequiredItem.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mLocationChange != null))
            {
                newClone.mLocationChange = ((ArticyValueArticyObject)(mLocationChange.CloneObject(newClone, aFirstClassParent)));
            }
            if ((MoraleChange != null))
            {
                newClone.MoraleChange = ((ArticyScriptInstruction)(MoraleChange.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.ManiacManfred.Features.DialogChoiceFeature clone = new Articy.ManiacManfred.Features.DialogChoiceFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "RequiredItem"))
            {
                RequiredItem = Articy.Unity.Interfaces.BaseScriptFragments.ObjectToModelRep(aValue);
                return;
            }
            if ((aProperty == "LocationChange"))
            {
                LocationChange = Articy.Unity.Interfaces.BaseScriptFragments.ObjectToModelRep(aValue);
                return;
            }
            if ((aProperty == "MoraleChange"))
            {
                MoraleChange = ((ArticyScriptInstruction)(aValue));
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "RequiredItem"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(RequiredItem);
            }
            if ((aProperty == "LocationChange"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(LocationChange);
            }
            if ((aProperty == "MoraleChange"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(MoraleChange);
            }
            return null;
        }
        #endregion
    }
}
